{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\nexport const addToCart = product => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach(x => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n\n      if (x.count < product.countInStock) {\n        x.count++;\n      }\n    }\n  });\n\n  if (!alreadyExists) {\n    cartItems.push({ ...product,\n      count: 1\n    });\n  }\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\nexport const removeFromCart = product => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice().filter(x => x._id !== product._id);\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: {\n      cartItems\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};","map":{"version":3,"sources":["/Users/luzhou/Downloads/Ecommerce_website/src/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","product","dispatch","getState","cartItems","cart","slice","alreadyExists","forEach","x","_id","count","countInStock","push","type","payload","localStorage","setItem","JSON","stringify","removeFromCart","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,UAA9C;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5D,QAAMC,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAhB,CAA0BE,KAA1B,EAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACAH,EAAAA,SAAS,CAACI,OAAV,CAAmBC,CAAD,IAAO;AACvB,QAAIA,CAAC,CAACC,GAAF,KAAUT,OAAO,CAACS,GAAtB,EAA2B;AACzBH,MAAAA,aAAa,GAAG,IAAhB;;AACA,UAAIE,CAAC,CAACE,KAAF,GAAUV,OAAO,CAACW,YAAtB,EAAoC;AAClCH,QAAAA,CAAC,CAACE,KAAF;AACD;AACF;AACF,GAPD;;AAQA,MAAI,CAACJ,aAAL,EAAoB;AAClBH,IAAAA,SAAS,CAACS,IAAV,CAAe,EAAE,GAAGZ,OAAL;AAAcU,MAAAA,KAAK,EAAE;AAArB,KAAf;AACD;;AACDT,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEhB,WADC;AAEPiB,IAAAA,OAAO,EAAE;AAAEX,MAAAA;AAAF;AAFF,GAAD,CAAR;AAIAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,SAAf,CAAlC;AACD,CAnBM;AAqBP,OAAO,MAAMgB,cAAc,GAAInB,OAAD,IAAa,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjE,QAAMC,SAAS,GAAGD,QAAQ,GACvBE,IADe,CACVD,SADU,CACAE,KADA,GAEfe,MAFe,CAEPZ,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUT,OAAO,CAACS,GAFjB,CAAlB;AAGAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAEf,gBAAR;AAA0BgB,IAAAA,OAAO,EAAE;AAAEX,MAAAA;AAAF;AAAnC,GAAD,CAAR;AACAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,SAAf,CAAlC;AACD,CANM","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      if (x.count < product.countInStock) {\n        x.count++;\n      }\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState()\n    .cart.cartItems.slice()\n    .filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};"]},"metadata":{},"sourceType":"module"}