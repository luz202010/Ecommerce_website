{"version":3,"sources":["store.js","reducers/productReducers.js","types.js","reducers/cartReducers.js","reducers/orderReducers.js","actions/productActions.js","components/Filter.js","util.js","components/Products.js","actions/cartActions.js","components/Cart.js","actions/orderActions.js","screens/HomeScreen.js","components/Sum.js","screens/AdminScreen.js","components/Create.js","screens/CreateScreen.js","screens/AdminUpdateScreen.js","App.js","index.js"],"names":["composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","size","payload","filteredItems","items","sort","product","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","applyMiddleware","thunk","fetchProducts","dispatch","a","fetch","res","json","data","console","log","Filter","this","props","filteredProducts","className","length","value","onChange","e","sortProducts","target","filterProducts","Component","connect","filter","x","availableSizes","indexOf","sortedProducts","slice","b","_id","price","formatCurrency","num","Number","toFixed","toLocaleString","Products","openModal","setState","closeModal","bottom","cascade","map","key","href","onClick","src","image","alt","title","countInStock","addToCart","isOpen","onRequestClose","description","getState","alreadyExists","forEach","count","push","setItem","stringify","Cart","handleInput","name","createOrder","preventDefault","email","address","total","reduce","c","clearOrder","showCheckout","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","HomeScreen","Sum","keyword","fetchSummary","id","deleteProduct","alert","message","i","row","searchProduct","placeholder","bind","deleteClick","callback","AdminScreen","Create","createProduct","clearProduct","undefined","getProducts","_d","defaultValue","CreateScreen","AdminUpdateScreen","match","params","App","to","path","component","exact","React","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.6b5d827a.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { orderReducer } from \"./reducers/orderReducers\";\n\nconst initialState = {};\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    products: productsReducer,\n    cart: cartReducer,\n    order: orderReducer,\n  }),\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\nexport default store;\n","import {\n  FETCH_PRODUCTS,\n  FILTER_PRODUCTS_BY_SIZE,\n  ORDER_PRODUCTS_BY_PRICE,\n  CREATE_PRODUCT,\n  CLEAR_PRODUCT,\n  SAVE_PRODUCT,\n  DELETE_PRODUCT\n} from \"../types\";\n\nexport const productsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FILTER_PRODUCTS_BY_SIZE:\n      return {\n        ...state,\n        size: action.payload.size,\n        filteredItems: action.payload.items,\n      };\n    case ORDER_PRODUCTS_BY_PRICE:\n      return {\n        ...state,\n        sort: action.payload.sort,\n        filteredItems: action.payload.items,\n      };\n    case FETCH_PRODUCTS:\n      return { items: action.payload, filteredItems: action.payload };\n    case CREATE_PRODUCT:\n        return { items: action.payload };\n    case SAVE_PRODUCT:\n        return {product: action.payload};\n    case DELETE_PRODUCT:\n        return {product: action.payload};\n    case CLEAR_PRODUCT:\n      return { items: null };\n    default:\n      return state;\n  }\n};\n\n\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\n\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\nexport const SAVE_PRODUCT = \"SAVE_PRODUCT\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const CLEAR_PRODUCT = \"CLEAR_PRODUCT\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\nexport const FETCH_SUMMARY= \"FETCH_SUMMARY\";","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { cartItems: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { cartItems: action.payload.cartItems };\n    default:\n      return state;\n  }\n};\n","import { CREATE_ORDER, CLEAR_ORDER, FETCH_ORDERS, FETCH_SUMMARY } from \"../types\";\n\nconst orderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_ORDER:\n      return { order: action.payload };\n    case CLEAR_ORDER:\n      return { order: null };\n    case FETCH_ORDERS:\n      return { orders: action.payload };\n    case FETCH_SUMMARY:\n        return { orders: action.payload };\n    default:\n      return state;\n  }\n};\nexport { orderReducer };\n","import {CLEAR_PRODUCT, FETCH_PRODUCTS} from \"../types\";\nimport {FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE} from \"../types\";\nimport {CREATE_PRODUCT} from \"../types\";\n\nexport const fetchProducts = () => async (dispatch) => {\n    const res = await fetch(\"/api/products\");\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n        type: FETCH_PRODUCTS,\n        payload: data,\n    });\n};\n\nexport const getProducts = (id, callback) => async (dispatch) => {\n    fetch(\"/api/getProject\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            id\n        }),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            callback(data)\n        });\n};\n\nexport const filterProducts = (products, size) => (dispatch) => {\n    dispatch({\n        type: FILTER_PRODUCTS_BY_SIZE,\n        payload: {\n            size: size,\n            items:\n                size === \"\"\n                    ? products\n                    : products.filter((x) => x.availableSizes.indexOf(size) >= 0),\n        },\n    });\n};\n\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\n    const sortedProducts = filteredProducts.slice();\n    if (sort === \"latest\") {\n        sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\n    } else {\n        sortedProducts.sort((a, b) =>\n            sort === \"lowest\"\n                ? a.price > b.price\n                    ? 1\n                    : -1\n                : a.price > b.price\n                    ? -1\n                    : 1\n        );\n    }\n    console.log(sortedProducts);\n    dispatch({\n        type: ORDER_PRODUCTS_BY_PRICE,\n        payload: {\n            sort: sort,\n            items: sortedProducts,\n        },\n    });\n};\n\n/* Create new product */\n\nexport const createProduct = (product) => (dispatch) => {\n    fetch(\"/api/products\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(product),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({type: CREATE_PRODUCT, payload: data});\n        });\n};\n\nexport const clearProduct = () => (dispatch) => {\n    dispatch({type: CLEAR_PRODUCT});\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\n\nclass Filter extends Component {\n  render() {\n    return !this.props.filteredProducts ? (\n      <div>Loading...</div>\n    ) : (\n      <div className=\"filter\">\n        <div className=\"filter-result\">\n          {this.props.filteredProducts.length} Products\n        </div>\n        <div className=\"filter-sort\">\n          Order by{\" \"}\n          <select\n            value={this.props.sort}\n            onChange={(e) =>\n              this.props.sortProducts(\n                this.props.filteredProducts,\n                e.target.value\n              )\n            }\n          >\n            <option value=\"latest\">Latest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"highest\">Highest</option>\n          </select>\n        </div>\n        <div className=\"filter-size\">\n          Filter by Size{\" \"}\n          <select\n            value={this.props.size}\n            onChange={(e) =>\n              this.props.filterProducts(this.props.products, e.target.value)\n            }\n          >\n            <option value=\"\">ALL</option>\n            <option value=\"XS\">XS</option>\n            <option value=\"S\">S</option>\n            <option value=\"M\">M</option>\n            <option value=\"L\">L</option>\n            <option value=\"XL\">XL</option>\n            <option value=\"ONESIZE\">ONESIZE</option>\n            <option value=\"35\">35</option>\n            <option value=\"36\">36</option>\n            <option value=\"37\">37</option>\n            <option value=\"38\">38</option>\n            <option value=\"39\">39</option>\n            <option value=\"40\">40</option>\n            <option value=\"41\">41</option>\n            <option value=\"42\">42</option>\n            <option value=\"43\">43</option>\n            <option value=\"44\">44</option>\n            <option value=\"44\">45</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    size: state.products.size,\n    sort: state.products.sort,\n    products: state.products.items,\n    filteredProducts: state.products.filteredItems,\n  }),\n  {\n    filterProducts,\n    sortProducts,\n  }\n)(Filter);\n","export default function formatCurrency(num) {\n  return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\n}\n","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nimport Fade from \"react-reveal/Fade\";\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"../actions/productActions\";\nimport { addToCart } from \"../actions/cartActions\";\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: null,\n    };\n  }\n  componentDidMount() {\n    this.props.fetchProducts();\n  }\n  openModal = (product) => {\n    this.setState({ product });\n  };\n  closeModal = () => {\n    this.setState({ product: null });\n  };\n  render() {\n    const { product } = this.state;\n    return (\n      <div>\n        <Fade bottom cascade>\n          {!this.props.products ? (\n            <div>Loading...</div>\n          ) : (\n            <ul className=\"products\">\n              {this.props.products.map((product) => (\n                <li key={product._id}>\n                  <div className=\"product\">\n                    <a\n                      href={\"#\" + product._id}\n                      onClick={() => this.openModal(product)}\n                    >\n                      <img src={product.image} alt={product.title}></img>\n                      <p>{product.title}</p>\n                    </a>\n                    <div className=\"product-price\">\n                      <div>{formatCurrency(product.price)}</div>\n                      {product.countInStock > 0 && (\n                        <button\n                          onClick={() => this.props.addToCart(product)}\n                          className=\"button primary\"\n                        >Add to Cart</button>\n                      )}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n        </Fade>\n        {product && (\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"product-details\">\n                <img src={product.image} alt={product.title}></img>\n                <div className=\"product-details-description\">\n                  <p>\n                    <strong>{product.title}</strong>\n                  </p>\n                  <p>\n                    Description:\n                    <li>{product.description}</li>\n                  </p>\n                  <p>\n                    In stock: {product.countInStock > 0? product.countInStock : \"Currently unavailable\"}\n                  </p>\n                  <p>\n                    Avaiable Sizes:{\" \"}\n                    {product.availableSizes.map((x) => (\n                      <span>\n                        {\" \"}\n                        <button className=\"button\">{x}</button>\n                      </span>\n                    ))}\n                  </p>\n                  <div className=\"product-price\">\n                    <div>{formatCurrency(product.price)}</div>\n                    {product.countInStock > 0 && (\n                        <button\n                          onClick={() => {this.props.addToCart(product); this.closeModal();}}\n                          className=\"button primary\"\n                        >Add to Cart</button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({ products: state.products.filteredItems }),\n  {\n    fetchProducts,\n    addToCart,\n  }\n)(Products);\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      if (x.count < product.countInStock) {\n        x.count++;\n      }\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState()\n    .cart.cartItems.slice()\n    .filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nimport Fade from \"react-reveal/Fade\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { removeFromCart } from \"../actions/cartActions\";\nimport { createOrder, clearOrder } from \"../actions/orderActions\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      showCheckout: false,\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  createOrder = (e) => {\n    e.preventDefault();\n    const order = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      cartItems: this.props.cartItems,\n      total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\n    };\n    this.props.createOrder(order);\n  };\n  closeModal = () => {\n    this.props.clearOrder();\n  };\n  \n  render() {\n    const { cartItems, order} = this.props;\n    return (\n      <div>\n        {cartItems.length === 0 ? (\n          <div className=\"cart cart-header\">Cart is empty</div>\n        ) : (\n          <div className=\"cart cart-header\">\n            You have {cartItems.length} in the cart{\" \"}\n          </div>\n        )}\n\n        {order && (\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"order-details\">\n                <h3 className=\"success-message\">Your order has been placed.</h3>\n                <h2>Order {order._id}</h2>\n                <ul>\n                  <li>\n                    <div>Name:</div>\n                    <div>{order.name}</div>\n                  </li>\n                  <li>\n                    <div>Email:</div>\n                    <div>{order.email}</div>\n                  </li>\n                  <li>\n                    <div>Address:</div>\n                    <div>{order.address}</div>\n                  </li>\n                  <li>\n                    <div>Date:</div>\n                    <div>{order.createdAt}</div>\n                  </li>\n                  <li>\n                    <div>Total:</div>\n                    <div>{formatCurrency(order.total)}</div>\n                  </li>\n                  <li>\n                    <div>Cart Items:</div>\n                    <div>\n                      {order.cartItems.map((x) => (\n                        <div>\n                          {x.count} {\" x \"} {x.title}\n                        </div>\n                      ))}\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n        <div>\n          <div className=\"cart\">\n            <Fade left cascade>\n              <ul className=\"cart-items\">\n                {cartItems.map((item) => (\n                  <li key={item._id}>\n                    <div>\n                      <img src={item.image} alt={item.title}></img>\n                    </div>\n                    <div>\n                      <div>{item.title}</div>\n                      <div className=\"right\">\n                        {formatCurrency(item.price)} x {item.count}{\" \"}\n                        <button\n                          className=\"button\"\n                          onClick={() => this.props.removeFromCart(item)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </Fade>\n          </div>\n          {cartItems.length !== 0 && (\n            <div>\n              <div className=\"cart\">\n                <div className=\"total\">\n                  <div>\n                    Total:{\" \"}\n                    {formatCurrency(\n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\n                    )}\n                  </div>\n                  <button\n                    onClick={() => {\n                      this.setState({ showCheckout: true });\n                    }}\n                    className=\"button primary\">\n                    Proceed\n                  </button>\n                </div>\n              </div>\n              {this.state.showCheckout && (\n                <Fade right cascade>\n                  <div className=\"cart\">\n                    <form onSubmit={this.createOrder}>\n                      <ul className=\"form-container\">\n                        <li>\n                          <label>Email</label>\n                          <input\n                            name=\"email\"\n                            type=\"email\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Name</label>\n                          <input\n                            name=\"name\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Address</label>\n                          <input\n                            name=\"address\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <button className=\"button primary\" type=\"submit\" >\n                            Checkout\n                          </button>\n                        </li>\n                      </ul>\n                    </form>\n                  </div>\n                </Fade>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    order: state.order.order,\n    cartItems: state.cart.cartItems,\n  }),\n  { removeFromCart, createOrder, clearOrder }\n)(Cart);\n","import {CREATE_ORDER, CLEAR_CART, CLEAR_ORDER, FETCH_ORDERS, FETCH_SUMMARY} from \"../types\";\n\nexport const createOrder = (order) => (dispatch) => {\n    fetch(\"/api/orders\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(order),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({type: CREATE_ORDER, payload: data});\n            localStorage.clear(\"cartItems\");\n            dispatch({type: CLEAR_CART});\n        });\n};\nexport const deleteProduct = (id, callback) => (dispatch) => {\n    fetch(\"/api/deleteProducts\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            id\n        }),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            callback(data)\n        });\n};\n\nexport const searchProduct = (keyword, callback) => (dispatch) => {\n    fetch(\"/api/searchProduct\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            keyword\n        }),\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            callback(data)\n        });\n};\nexport const clearOrder = () => (dispatch) => {\n    dispatch({type: CLEAR_ORDER});\n};\nexport const fetchOrders = () => (dispatch) => {\n    fetch(\"/api/orders\")\n        .then((res) => res.json())\n        .then((data) => {\n            dispatch({type: FETCH_ORDERS, payload: data});\n        });\n};\nexport const fetchSummary = (callback) => (dispatch) => {\n    fetch(\"/api/products\")\n        .then((res) => res.json())\n        .then((data) => {\n            callback(data)\n            dispatch({type: FETCH_SUMMARY, payload: data});\n        });\n};\n","import React, {Component} from \"react\";\nimport Filter from \"../components/Filter\";\nimport Products from \"../components/Products\";\nimport Cart from \"../components/Cart\";\n\nexport default class HomeScreen extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"content\">\n                    <div className=\"main\">\n                        <Filter></Filter>\n                        <Products></Products>\n                    </div>\n                    <div className=\"sidebar\">\n                        <Cart/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {deleteProduct, fetchSummary, searchProduct} from \"../actions/orderActions\";\nimport {fetchProducts} from \"../actions/productActions\"\nimport formatCurrency from \"../util\";\n\nclass Sum extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            orders: [],\n            keyword: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchSummary((res) => {\n            this.setState({\n                orders: res\n            })\n        });\n    }\n\n    deleteClick(id) {\n        this.props.deleteProduct(id, (res) => {\n            alert(res.message)\n            let orders = []\n            for (let i = 0; i < this.state.orders.length; i++) {\n                let row = this.state.orders[i];\n                if (row._id != id) {\n                    orders.push(row)\n                }\n            }\n            this.setState({\n                orders\n            })\n        })\n    }\n\n    searchProduct() {\n        this.props.searchProduct(this.state.keyword, (res) => {\n            this.setState({\n                orders: res\n            })\n        })\n    }\n\n    handleInput = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    render() {\n        const orders = this.state.orders;\n        return !orders || orders == null ? (\n            <div>Orders</div>\n        ) : (\n            <div className=\"orders\">\n                <h2>Stock Summary</h2>\n                <div>\n                    <ul>\n                        <li><input type=\"text\" placeholder=\"Enter item's title\" name=\"keyword\"\n                                   required\n                                   onChange={this.handleInput}/></li>\n                        <li><a href=\"javascript:;\" className=\"search\" onClick={this.searchProduct.bind(this)}>Search</a></li>\n                    </ul>\n                </div>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>TITLE</th>\n                        <th>PRICE</th>\n                        <th>STOCK</th>\n                        <th>DELETE</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {orders.map((order) => (\n                        <tr>\n                            <td>{order._id}</td>\n                            <td>{order.title}</td>\n                            <td> {formatCurrency(order.price)}</td>\n                            <td>{order.countInStock}</td>\n                            <td>\n                                <a href=\"javascript:;\" onClick={this.deleteClick.bind(this, order._id)}>DELETE</a>\n                            </td>\n                            <td>\n                                <a href={\"/update/\" + order._id} onClick={() => fetchProducts(order)}>UPDATE</a>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        // orders: state.order.orders,\n    }),\n    {\n        fetchSummary,\n        deleteProduct,\n        searchProduct\n    }\n)(Sum);\n","import React, { Component } from \"react\";\nimport Sum from \"../components/Sum\";\n\nexport default class AdminScreen extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"summary\">\n          <a href=\"/create\">CREATE</a>\n          <a href=\"/\">BACK TO MAINPAGE</a>\n        </div>\n        <div>\n          <Sum />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {createProduct, clearProduct, getProducts} from \"../actions/productActions\"\nimport Modal from \"react-modal\";\nimport {connect} from \"react-redux\";\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            _id: this.props.id == undefined ? '' : this.props.id,\n            title: \"\",\n            price: \"\",\n            countInStock: \"\",\n            description: \"\",\n            image: \"\",\n            availableSizes: \"\"\n        };\n        if (this.state._id != '') {\n            this.props.getProducts(this.state._id, (res) => {\n                this.setState({\n                    title: res.title,\n                    price: res.price,\n                    countInStock: res.countInStock,\n                    description: res.description,\n                    image: res.image,\n                    availableSizes: res.availableSizes\n                })\n            })\n        }\n    }\n\n    handleInput = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n    createProduct = (e) => {\n        e.preventDefault();\n        const product = {\n            _id: this.state._id,\n            title: this.state.title,\n            price: this.state.price,\n            countInStock: this.state.countInStock,\n            description: this.state.description,\n            image: this.state.image,\n            availableSizes: this.state.availableSizes,\n        };\n        this.props.createProduct(product);\n    };\n    closeModal = () => {\n        this.props.clearProduct();\n    };\n\n    render() {\n        const {product} = this.props;\n        return (\n            <div>\n                {product && (\n                    <Modal isOpen={true} onRequestClose={this.closeModal}>\n                        <div className=\"summary\">\n                            <a href=\"/admin/create\">CREATE MORE</a>\n                            <a href=\"/admin\">BACK TO ADMIN</a>\n                        </div>\n                        <div className=\"create\">\n                            <h3 className=\"success-message\">New product has been placed.</h3>\n                            <h2>Product ID  {product._d}</h2>\n                            <ul>\n                                <li>\n                                    <div>Title: {product.title}</div>\n                                </li>\n                                <li>\n                                    <div>Price: ${product.price}</div>\n                                </li>\n                                <li>\n                                    <div>Stock: {product.countInStock}</div>\n                                </li>\n                                <li>\n                                    <div>Description: {product.description}</div>\n                                </li>\n                                <li>\n                                    <div>Sizes: {product.availableSizes}</div>\n                                </li>\n                            </ul>\n                        </div>\n                    </Modal>\n                )}\n                <div>\n                    <div className=\"create\">\n                        <form onSubmit={this.createProduct}>\n                            <ul className=\"form-container\">\n                                <li>\n                                    <label>Title</label>\n                                    <input\n                                        defaultValue={this.state.title}\n                                        name=\"title\"\n                                        type=\"title\"\n                                        required\n                                        onChange={this.handleInput}\n                                    ></input>\n                                </li>\n                                <li>\n                                    <label>Price</label>\n                                    <input\n                                        defaultValue={this.state.price}\n                                        name=\"price\"\n                                        type=\"price\"\n                                        required\n                                        onChange={this.handleInput}\n                                    ></input>\n                                </li>\n                                <li>\n                                    <label>Stock</label>\n                                    <input\n                                        defaultValue={this.state.countInStock}\n                                        name=\"countInStock\"\n                                        type=\"countInStock\"\n                                        required\n                                        onChange={this.handleInput}\n                                    ></input>\n                                </li>\n                                <li>\n                                    <label>Description</label>\n                                    <input\n                                        defaultValue={this.state.description}\n                                        name=\"description\"\n                                        type=\"description\"\n                                        required\n                                        onChange={this.handleInput}\n                                    ></input>\n                                </li>\n                                <li>\n                                    <label>Sizes</label>\n                                    <input\n                                        defaultValue={this.state.availableSizes}\n                                        name=\"availableSizes\"\n                                        type=\"availableSizes\"\n                                        required\n                                        onChange={this.handleInput}\n                                    ></input>\n                                </li>\n                                <li>\n                                    <button className=\"button primary\" type=\"submit\">\n                                        Submit\n                                    </button>\n                                </li>\n                            </ul>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        product: state.products.items,\n    }),\n    {createProduct, clearProduct, getProducts}\n)(Create);","import React, {Component} from \"react\";\nimport Create from \"../components/Create\";\n\nexport default class CreateScreen extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"summary\">\n                    <a href=\"/admin\">BACK TO ADMIN</a>\n                </div>\n                <div className=\"create\">\n                    <Create/>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\r\nimport Create from \"../components/Create\";\r\n\r\nexport default class AdminUpdateScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"summary\">\r\n                    <a href=\"/admin\">BACK TO ADMIN</a>\r\n                </div>\r\n                <div className=\"create\">\r\n                    <Create id={this.props.match.params.id}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport CreateScreen from \"./screens/CreateScreen\";\nimport AdminUpdateScreen from \"./screens/AdminUpdateScreen\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"grid-container\">\n                        <header>\n                            <Link to=\"/\">Adidasss</Link>\n                            <Link to=\"/admin\">Admin</Link>\n                        </header>\n                        <main>\n                            <Route path=\"/create\" component={CreateScreen}/>\n                            <Route path=\"/admin\" component={AdminScreen}/>\n                            <Route path=\"/update/:id\" component={AdminUpdateScreen}/>\n                            <Route path=\"/\" component={HomeScreen} exact/>\n                        </main>\n                        <footer>All right is reserved.</footer>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}